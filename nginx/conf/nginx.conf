worker_processes auto;

events {
    worker_connections 1024; # Increase if needed based on traffic
}

http {
    include /etc/nginx/mime.types;
    sendfile on;

    # Rate Limiting (Optional)
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

    server {
        listen 80;
        server_name ${DOMAIN};
        return 301 https://$host$request_uri; # Redirect all HTTP traffic to HTTPS
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name ${DOMAIN};

        # SSL/TLS Configuration
        ssl_certificate /etc/nginx/server.crt;
        ssl_certificate_key /etc/nginx/server.key;
        ssl_protocols TLSv1.2 TLSv1.3; # Disable outdated protocols
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384'; # Stronger cipher suites
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # Enable HSTS

        # General Optimizations
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        keepalive_requests 100;
        client_body_buffer_size 10K;
        client_header_buffer_size 1k;
        client_max_body_size 8M;
        large_client_header_buffers 4 16k;

        # Common proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;

        location / {
            proxy_pass http://frontend:${FRONTEND_PORT_INTERNAL};

            # WebSocket support for frontend
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # Timeout settings
            proxy_connect_timeout 60;
            proxy_read_timeout 60;
        }

        # Backend API (Versioned Endpoints)
        location /api/ {
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,auth';
            limit_req zone=mylimit burst=20 nodelay; # Apply rate limiting
            proxy_pass http://backend:${BACKEND_PORT_INTERNAL}/;
        }

        # Backend WebSocket (Versioned Endpoints)
        location /api/ws {
            proxy_pass http://backend:${BACKEND_PORT_INTERNAL}/ws;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Long timeout for WebSockets
            proxy_read_timeout 86400;
        }

        # MailHog Web UI (Restricted Access)
        location /mailhog/ {
            proxy_pass http://mailhog:${MAILHOG_UI_PORT_INTERNAL}/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Forwarded-Prefix /mailhog/;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            send_timeout 600;
        }
    }
}